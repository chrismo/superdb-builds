name: Release Build

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version string for the build/release'
        required: true
        type: string
      sha_ref:
        description: 'SHA or ref to build'
        required: true
        type: string
      create_release:
        description: 'Create GitHub release'
        required: false
        default: false
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            artifact_name: super-${{ github.event.inputs.version }}-linux-amd64
          - os: ubuntu-24.04-arm
            arch: arm64
            artifact_name: super-${{ github.event.inputs.version }}-linux-arm64
          - os: macos-latest
            arch: amd64
            artifact_name: super-${{ github.event.inputs.version }}-darwin-amd64
          - os: macos-latest
            arch: arm64
            artifact_name: super-${{ github.event.inputs.version }}-darwin-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install super from specific SHA
        run: |
          go install github.com/brimdata/super/cmd/super@${{ github.event.inputs.sha_ref }}

      - name: Verify installation
        run: |
          super --version
          which super

      - name: Create artifact directory
        run: mkdir -p artifacts

      - name: Copy binary to artifacts
        run: |
          cp $(which super) artifacts/${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

  release:
    if: ${{ github.event.inputs.create_release == 'true' }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          files: |
            super-${{ github.event.inputs.version }}-linux-amd64/super-${{ github.event.inputs.version }}-linux-amd64
            super-${{ github.event.inputs.version }}-linux-arm64/super-${{ github.event.inputs.version }}-linux-arm64
            super-${{ github.event.inputs.version }}-darwin-amd64/super-${{ github.event.inputs.version }}-darwin-amd64
            super-${{ github.event.inputs.version }}-darwin-arm64/super-${{ github.event.inputs.version }}-darwin-arm64
          generate_release_notes: false
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          body: |
            Binary release for version ${{ github.event.inputs.version }}
            Built from SHA: ${{ github.event.inputs.sha_ref }}
            
            This is an unofficial pre-release build of SuperDB that can be installed for testing purposes. It is not intended for production use. See also the [asdf-superdb plugin](https://github.com/chrismo/asdf-superdb) which can install these pre-releases.
